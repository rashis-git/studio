
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is the owner of the data.
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    // Helper function to check if the request is from a trusted server process.
    // For this app, we identify server processes as unauthenticated requests.
    // In a production app, you would use service accounts or other auth mechanisms.
    function isServer() {
      return request.auth == null;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      allow create: if isOwner(userId);
      allow read: if isOwner(userId) || isServer();
      allow update, delete: if isOwner(userId);

      // Rules for the 'savedActivities' sub-collection
      match /savedActivities/{activityId} {
        allow read, write, delete: if isOwner(userId);
      }
    }

    // Rules for the 'activity-logs' collection
    match /activity-logs/{logId} {
      allow create: if isOwner(request.resource.data.userId);
      
      // Allow reads for queries from the server if they specify a userId.
      // Also allow users to read their own individual log documents.
      allow read: if (isServer() && request.query.userId is string) || isOwner(resource.data.userId);

      // Users cannot update or delete logs directly.
      allow update, delete: if false;
    }

    // Rules for the 'state-logs' (mood) collection
    match /state-logs/{logId} {
      allow create: if isOwner(request.resource.data.userId);

      // Allow reads for queries from the server if they specify a userId.
      // Also allow users to read their own individual log documents.
      allow read: if (isServer() && request.query.userId is string) || isOwner(resource.data.userId);
      
      // Users cannot update or delete logs directly.
      allow update, delete: if false;
    }
    
    // Rules for the 'planned-activities' collection
    match /planned-activities/{planId} {
      allow create: if isOwner(request.resource.data.userId);
      allow read, update, delete: if isOwner(resource.data.userId);
    }

    // Rules for notification preferences
    match /notification-preferences/{userId} {
      allow read, write: if isOwner(userId);
    }
  }
}
